// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.4.0.0
//      SpecFlow Generator Version:2.4.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace finalspecflow.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.4.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("To test login functionality for OrangeHRm application")]
    public partial class ToTestLoginFunctionalityForOrangeHRmApplicationFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "Feature.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "To test login functionality for OrangeHRm application", "\tTo test login functionalitis ", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("To launch the url and save the data in excel")]
        [NUnit.Framework.CategoryAttribute("Launch")]
        [NUnit.Framework.CategoryAttribute("web")]
        [NUnit.Framework.CategoryAttribute("app")]
        [NUnit.Framework.CategoryAttribute("and")]
        [NUnit.Framework.CategoryAttribute("write")]
        [NUnit.Framework.CategoryAttribute("data")]
        [NUnit.Framework.CategoryAttribute("into")]
        [NUnit.Framework.CategoryAttribute("excel")]
        public virtual void ToLaunchTheUrlAndSaveTheDataInExcel()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("To launch the url and save the data in excel", null, new string[] {
                        "Launch",
                        "web",
                        "app",
                        "and",
                        "write",
                        "data",
                        "into",
                        "excel"});
#line 17
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 18
 testRunner.Given("Launchh the browser", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 19
 testRunner.And("Open thee url in chromee", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 20
 testRunner.When("make the entry save in excel sheet", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 21
 testRunner.Then("save the enrtyy", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("To launch the Amazon url and save the data in excel")]
        [NUnit.Framework.CategoryAttribute("Launch")]
        [NUnit.Framework.CategoryAttribute("Amazon")]
        [NUnit.Framework.CategoryAttribute("web")]
        [NUnit.Framework.CategoryAttribute("app")]
        [NUnit.Framework.CategoryAttribute("and")]
        [NUnit.Framework.CategoryAttribute("write")]
        [NUnit.Framework.CategoryAttribute("data")]
        [NUnit.Framework.CategoryAttribute("into")]
        [NUnit.Framework.CategoryAttribute("excel")]
        public virtual void ToLaunchTheAmazonUrlAndSaveTheDataInExcel()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("To launch the Amazon url and save the data in excel", null, new string[] {
                        "Launch",
                        "Amazon",
                        "web",
                        "app",
                        "and",
                        "write",
                        "data",
                        "into",
                        "excel"});
#line 26
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 27
 testRunner.Given("Launchh the browser in chrome", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 28
 testRunner.And("Open thee amazon url in chromee", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 29
 testRunner.When("make the entry of phones save in excel sheet", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 30
 testRunner.Then("save the enrtyy in excel", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("To launch the Flipkart search product and save the data in excel")]
        [NUnit.Framework.CategoryAttribute("Launch")]
        [NUnit.Framework.CategoryAttribute("Flipkart")]
        [NUnit.Framework.CategoryAttribute("web")]
        [NUnit.Framework.CategoryAttribute("app")]
        [NUnit.Framework.CategoryAttribute("and")]
        [NUnit.Framework.CategoryAttribute("write")]
        [NUnit.Framework.CategoryAttribute("data")]
        [NUnit.Framework.CategoryAttribute("intoo")]
        [NUnit.Framework.CategoryAttribute("excel")]
        public virtual void ToLaunchTheFlipkartSearchProductAndSaveTheDataInExcel()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("To launch the Flipkart search product and save the data in excel", null, new string[] {
                        "Launch",
                        "Flipkart",
                        "web",
                        "app",
                        "and",
                        "write",
                        "data",
                        "intoo",
                        "excel"});
#line 33
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 34
 testRunner.Given("Launchh the chrome browser.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 35
 testRunner.And("Open thee Flipkart url in chromee", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 36
 testRunner.When("Search for phones under 10000", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 37
 testRunner.Then("save the records in excel", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 38
 testRunner.Then("close the chrome browse.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("To launch the petperasite app and click on relevent states")]
        [NUnit.Framework.CategoryAttribute("Test(priority")]
        [NUnit.Framework.CategoryAttribute("=")]
        [NUnit.Framework.CategoryAttribute("2)")]
        [NUnit.Framework.CategoryAttribute("Launch")]
        [NUnit.Framework.CategoryAttribute("petperasite")]
        [NUnit.Framework.CategoryAttribute("web")]
        [NUnit.Framework.CategoryAttribute("app")]
        [NUnit.Framework.CategoryAttribute("and")]
        [NUnit.Framework.CategoryAttribute("click")]
        [NUnit.Framework.CategoryAttribute("on")]
        [NUnit.Framework.CategoryAttribute("states")]
        public virtual void ToLaunchThePetperasiteAppAndClickOnReleventStates()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("To launch the petperasite app and click on relevent states", null, new string[] {
                        "Test(priority",
                        "=",
                        "2)",
                        "Launch",
                        "petperasite",
                        "web",
                        "app",
                        "and",
                        "click",
                        "on",
                        "states"});
#line 70
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 71
 testRunner.Given("Launchh the chrome browser for.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 72
 testRunner.And("Open thee petperasite website", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 73
 testRunner.When("go inside frame", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 74
 testRunner.Then("click on states", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 75
 testRunner.Then("close the chrome browse..", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("To launch amazon web application search for Camera and write results into excel")]
        [NUnit.Framework.CategoryAttribute("amazoncamera")]
        [NUnit.Framework.CategoryAttribute("Launch")]
        [NUnit.Framework.CategoryAttribute("Amazon")]
        [NUnit.Framework.CategoryAttribute("web")]
        [NUnit.Framework.CategoryAttribute("application")]
        [NUnit.Framework.CategoryAttribute("search")]
        [NUnit.Framework.CategoryAttribute("for")]
        [NUnit.Framework.CategoryAttribute("Camera")]
        [NUnit.Framework.CategoryAttribute("and")]
        [NUnit.Framework.CategoryAttribute("write")]
        [NUnit.Framework.CategoryAttribute("results")]
        [NUnit.Framework.CategoryAttribute("into")]
        [NUnit.Framework.CategoryAttribute("excel")]
        public virtual void ToLaunchAmazonWebApplicationSearchForCameraAndWriteResultsIntoExcel()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("To launch amazon web application search for Camera and write results into excel", null, new string[] {
                        "amazoncamera",
                        "Launch",
                        "Amazon",
                        "web",
                        "application",
                        "search",
                        "for",
                        "Camera",
                        "and",
                        "write",
                        "results",
                        "into",
                        "excel"});
#line 80
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 81
 testRunner.Given("Launchh the browser in chrome browser", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 82
 testRunner.And("Open thee amazon url in chromee browser", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 83
 testRunner.When("Type Camera in search box and click on search icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 84
 testRunner.Then("save the results in excel sheet or notepad", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 85
 testRunner.Then("Close the opened Browser", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("To make login in orange HRM application and go to home page")]
        [NUnit.Framework.CategoryAttribute("MHCLogin")]
        [NUnit.Framework.CategoryAttribute("Launch")]
        [NUnit.Framework.CategoryAttribute("MHC")]
        [NUnit.Framework.CategoryAttribute("website")]
        [NUnit.Framework.CategoryAttribute("and")]
        [NUnit.Framework.CategoryAttribute("make")]
        [NUnit.Framework.CategoryAttribute("login")]
        [NUnit.Framework.CategoryAttribute("into")]
        [NUnit.Framework.CategoryAttribute("application")]
        [NUnit.Framework.CategoryAttribute("with")]
        [NUnit.Framework.CategoryAttribute("users")]
        [NUnit.Framework.CategoryAttribute("account")]
        [NUnit.Framework.TestCaseAttribute("manishverma66@gmail.com", "nathcorp!1", new string[] {
                "source:MHC.xlsx:Sheet1"}, Category="source:MHC.xlsx:Sheet1")]
        public virtual void ToMakeLoginInOrangeHRMApplicationAndGoToHomePage(string emailid, string password, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "MHCLogin",
                    "Launch",
                    "MHC",
                    "website",
                    "and",
                    "make",
                    "login",
                    "into",
                    "application",
                    "with",
                    "users",
                    "account"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("To make login in orange HRM application and go to home page", null, @__tags);
#line 6
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 7
 testRunner.Given("Launch the browser and open the url", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 8
 testRunner.And(string.Format("Enter the valid userid {0} and password {1}", emailid, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 9
 testRunner.When("Click on login button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 10
 testRunner.Then("User should be sucessfully redirected to home page of application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("To make login in Guru99 application and go to home page")]
        [NUnit.Framework.CategoryAttribute("guru99")]
        [NUnit.Framework.CategoryAttribute("Launch")]
        [NUnit.Framework.CategoryAttribute("Guru99")]
        [NUnit.Framework.CategoryAttribute("website")]
        [NUnit.Framework.CategoryAttribute("and")]
        [NUnit.Framework.CategoryAttribute("make")]
        [NUnit.Framework.CategoryAttribute("login")]
        [NUnit.Framework.CategoryAttribute("into")]
        [NUnit.Framework.CategoryAttribute("application")]
        [NUnit.Framework.CategoryAttribute("with")]
        [NUnit.Framework.CategoryAttribute("correct")]
        [NUnit.Framework.CategoryAttribute("users")]
        [NUnit.Framework.CategoryAttribute("account")]
        [NUnit.Framework.TestCaseAttribute("mngr522908", "AvutYny", new string[] {
                "source:MHC.xlsx:Sheet2"}, Category="source:MHC.xlsx:Sheet2")]
        public virtual void ToMakeLoginInGuru99ApplicationAndGoToHomePage(string emailid, string password, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "guru99",
                    "Launch",
                    "Guru99",
                    "website",
                    "and",
                    "make",
                    "login",
                    "into",
                    "application",
                    "with",
                    "correct",
                    "users",
                    "account"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("To make login in Guru99 application and go to home page", null, @__tags);
#line 42
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 43
 testRunner.Given("Launch the chrome browser and open the url", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 44
 testRunner.And(string.Format("Enter a valid userid {0} and password {1}", emailid, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 45
 testRunner.When("Click on the login button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 46
 testRunner.Then("User should bee sucessfully redirecteded to home page of application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("To make login in Adminportal application and save data in excel")]
        [NUnit.Framework.CategoryAttribute("Admin")]
        [NUnit.Framework.CategoryAttribute("Launch")]
        [NUnit.Framework.CategoryAttribute("Admin")]
        [NUnit.Framework.CategoryAttribute("pannel")]
        [NUnit.Framework.CategoryAttribute("website")]
        [NUnit.Framework.CategoryAttribute("and")]
        [NUnit.Framework.CategoryAttribute("make")]
        [NUnit.Framework.CategoryAttribute("login")]
        [NUnit.Framework.CategoryAttribute("into")]
        [NUnit.Framework.CategoryAttribute("application")]
        [NUnit.Framework.CategoryAttribute("and")]
        [NUnit.Framework.CategoryAttribute("export")]
        [NUnit.Framework.CategoryAttribute("data")]
        [NUnit.Framework.CategoryAttribute("in")]
        [NUnit.Framework.CategoryAttribute("excel")]
        [NUnit.Framework.CategoryAttribute("sheet")]
        [NUnit.Framework.TestCaseAttribute("user01", "guru99com", new string[] {
                "source:MHC.xlsx:Sheet3"}, Category="source:MHC.xlsx:Sheet3")]
        public virtual void ToMakeLoginInAdminportalApplicationAndSaveDataInExcel(string emailid, string password, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Admin",
                    "Launch",
                    "Admin",
                    "pannel",
                    "website",
                    "and",
                    "make",
                    "login",
                    "into",
                    "application",
                    "and",
                    "export",
                    "data",
                    "in",
                    "excel",
                    "sheet"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("To make login in Adminportal application and save data in excel", null, @__tags);
#line 55
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 56
 testRunner.Given("Launch the chrome browser and open the url for admin portal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 57
 testRunner.And(string.Format("Eneter a valid userid {0} and password {1} to make loginb", emailid, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 58
 testRunner.When("Click on the login button to login", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 59
 testRunner.Then("Save the data in exel sheet", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 60
 testRunner.Then("close tge opened bwowser", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("To make Signup for unstop web application")]
        [NUnit.Framework.CategoryAttribute("Unstop")]
        [NUnit.Framework.CategoryAttribute("Launch")]
        [NUnit.Framework.CategoryAttribute("Unstop")]
        [NUnit.Framework.CategoryAttribute("web")]
        [NUnit.Framework.CategoryAttribute("application")]
        [NUnit.Framework.CategoryAttribute("and")]
        [NUnit.Framework.CategoryAttribute("do")]
        [NUnit.Framework.CategoryAttribute("signup")]
        [NUnit.Framework.CategoryAttribute("for")]
        [NUnit.Framework.CategoryAttribute("candidate.")]
        [NUnit.Framework.TestCaseAttribute("Manish", "verma", "manishverma66", "manishverma66@gmail.com", "Nathcorp!1", "Nathcorp!1", new string[] {
                "source:unstop.xlsx:Sheet1"}, Category="source:unstop.xlsx:Sheet1")]
        public virtual void ToMakeSignupForUnstopWebApplication(string firstName, string lastName, string userName, string email, string password, string confirmpassword, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Unstop",
                    "Launch",
                    "Unstop",
                    "web",
                    "application",
                    "and",
                    "do",
                    "signup",
                    "for",
                    "candidate."};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("To make Signup for unstop web application", null, @__tags);
#line 91
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 92
 testRunner.Given("Launch the chrome browser and open the url for unstop application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 93
 testRunner.And("Click on the \"Signup button\" to redirect on sign up page.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 94
 testRunner.And(string.Format("Fill all the deatils for Signup page {0} {1} {2} {3} {4} {5}", firstName, lastName, userName, email, password, confirmpassword), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 95
 testRunner.Then("Click on the \"Next\" button to complete the sign-up process.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 96
 testRunner.Then("Close the browser after successfully signing up.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("User login with valid credentials")]
        [NUnit.Framework.TestCaseAttribute("testuser1", "Pass123", null)]
        [NUnit.Framework.TestCaseAttribute("Admin", "admin123", null)]
        [NUnit.Framework.TestCaseAttribute("Adminn", "admin1234", null)]
        public virtual void UserLoginWithValidCredentials(string username, string password, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("User login with valid credentials", null, exampleTags);
#line 104
  this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 105
    testRunner.Given("User is on the application login page apple", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 106
    testRunner.When(string.Format("User enters apple \"{0}\" and \"{1}\"", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 107
    testRunner.And("User clicks the Login button apple", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 108
    testRunner.Then("User should be logged in successfully apple", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
